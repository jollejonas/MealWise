// <auto-generated />
using System;
using MealWise.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MealWiseAPI.Migrations
{
    [DbContext(typeof(MealWiseContext))]
    [Migration("20250115153211_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MealWise.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("UnitType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Kartoffel",
                            UnitType = "kg"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ris",
                            UnitType = "g"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kyllingebryst",
                            UnitType = "stk"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Æg",
                            UnitType = "stk"
                        });
                });

            modelBuilder.Entity("MealWise.Models.MealPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("MealPlans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateOnly(2025, 1, 22),
                            Name = "Ugeplan",
                            StartDate = new DateOnly(2025, 1, 15),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("MealWise.Models.MealPlanRecipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("MealPlanId")
                        .HasColumnType("int");

                    b.Property<string>("MealType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("ServingsOverride")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MealPlanId");

                    b.HasIndex("RecipeId");

                    b.ToTable("MealPlanRecipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateOnly(2025, 1, 15),
                            MealPlanId = 1,
                            MealType = "Dinner",
                            RecipeId = 1,
                            ServingsOverride = 2
                        });
                });

            modelBuilder.Entity("MealWise.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CookTime")
                        .HasColumnType("int");

                    b.Property<DateOnly>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PrepTime")
                        .HasColumnType("int");

                    b.Property<int>("Servings")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly>("UpdatedAt")
                        .HasColumnType("date");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CookTime = 20,
                            CreatedAt = new DateOnly(2025, 1, 15),
                            Description = "En lækker kartoffelsalat med creme fraiche.",
                            ImageUrl = "https://example.com/kartoffelsalat.jpg",
                            Instructions = "1. Kog kartoflerne. 2. Bland ingredienserne.",
                            PrepTime = 15,
                            Servings = 4,
                            Title = "Kartoffelsalat",
                            UpdatedAt = new DateOnly(2025, 1, 15),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CookTime = 30,
                            CreatedAt = new DateOnly(2025, 1, 15),
                            Description = "Kyllingebryst med ris og grøntsager.",
                            ImageUrl = "https://example.com/kylling_med_ris.jpg",
                            Instructions = "1. Steg kyllingen. 2. Kog risene.",
                            PrepTime = 10,
                            Servings = 2,
                            Title = "Stegt kylling med ris",
                            UpdatedAt = new DateOnly(2025, 1, 15),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("MealWise.Models.RecipeIngredient", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<string>("UnitOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecipeId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("RecipeIngredients");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 1,
                            Id = 1,
                            Quantity = 0.5,
                            UnitOverride = "kg"
                        },
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 4,
                            Id = 2,
                            Quantity = 3.0,
                            UnitOverride = "stk"
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 2,
                            Id = 3,
                            Quantity = 200.0,
                            UnitOverride = "g"
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 3,
                            Id = 4,
                            Quantity = 2.0,
                            UnitOverride = "stk"
                        });
                });

            modelBuilder.Entity("MealWise.Models.ShoppingList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("UpdatedAt")
                        .HasColumnType("date");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ShoppingLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateOnly(2025, 1, 15),
                            Status = "Active",
                            UpdatedAt = new DateOnly(2025, 1, 15),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("MealWise.Models.ShoppingListItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Checked")
                        .HasColumnType("bit");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ShoppingListId")
                        .HasColumnType("int");

                    b.Property<string>("UnitOverride")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("ShoppingListId");

                    b.ToTable("ShoppingListItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Checked = false,
                            IngredientId = 1,
                            Quantity = 1,
                            ShoppingListId = 1,
                            UnitOverride = "kg"
                        },
                        new
                        {
                            Id = 2,
                            Checked = true,
                            IngredientId = 2,
                            Quantity = 500,
                            ShoppingListId = 1,
                            UnitOverride = "g"
                        });
                });

            modelBuilder.Entity("MealWise.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 15, 16, 32, 10, 813, DateTimeKind.Local).AddTicks(7665),
                            Email = "john.doe@example.com",
                            Name = "John Doe",
                            PasswordHash = "hashedpassword123",
                            UpdatedAt = new DateTime(2025, 1, 15, 16, 32, 10, 816, DateTimeKind.Local).AddTicks(461),
                            Username = "johndoe"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 1, 15, 16, 32, 10, 816, DateTimeKind.Local).AddTicks(698),
                            Email = "jane.doe@example.com",
                            Name = "Jane Doe",
                            PasswordHash = "hashedpassword456",
                            UpdatedAt = new DateTime(2025, 1, 15, 16, 32, 10, 816, DateTimeKind.Local).AddTicks(704),
                            Username = "janedoe"
                        });
                });

            modelBuilder.Entity("MealWise.Models.MealPlan", b =>
                {
                    b.HasOne("MealWise.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MealWise.Models.MealPlanRecipe", b =>
                {
                    b.HasOne("MealWise.Models.MealPlan", "MealPlan")
                        .WithMany()
                        .HasForeignKey("MealPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MealWise.Models.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MealPlan");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("MealWise.Models.Recipe", b =>
                {
                    b.HasOne("MealWise.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MealWise.Models.RecipeIngredient", b =>
                {
                    b.HasOne("MealWise.Models.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MealWise.Models.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("MealWise.Models.ShoppingList", b =>
                {
                    b.HasOne("MealWise.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MealWise.Models.ShoppingListItem", b =>
                {
                    b.HasOne("MealWise.Models.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MealWise.Models.ShoppingList", "ShoppingList")
                        .WithMany()
                        .HasForeignKey("ShoppingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("ShoppingList");
                });

            modelBuilder.Entity("MealWise.Models.Recipe", b =>
                {
                    b.Navigation("RecipeIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
